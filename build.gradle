plugins {
    id "io.qameta.allure" version "2.8.1"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

group 'sauce.demo.ui'
version '1.0'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.1.0'
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '4.1.2'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.2'
    testImplementation group: 'io.cucumber', name: 'cucumber-java', version: '2.4.0'
    testImplementation group: 'io.cucumber', name: 'cucumber-picocontainer', version: '2.4.0'
    testImplementation group: 'io.cucumber', name: 'cucumber-testng', version: '2.4.0'
    testImplementation group: 'io.qameta.allure', name: 'allure-cucumber2-jvm', version: '2.13.5'
    testImplementation group: 'io.rest-assured', name: 'json-schema-validator', version: '4.1.2'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.28'
}

def cucumberOptions = System.getProperty('cucumberOptions')

allure {
    version = '2.13.5'
    resultsDir = file("${rootProject.rootDir}/build/allure-results")
    reportDir = file("${rootProject.rootDir}/build/allure-report")
}

checkstyle {
    toolVersion = '8.23'
    configFile = file("${rootProject.rootDir}/config/checkstyle/checkstyle.xml")
}

pmd {
    toolVersion = '6.0.0'
}

tasks.withType(Pmd) {
    ruleSets = ["java-basic", "java-braces", "java-unnecessary", "java-unusedcode", "java-strictexception"]
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task executeTests(type: Test) {
    systemProperties(System.getProperties())
    outputs.upToDateWhen { false }
    doFirst {
        useTestNG()
        options {
            useDefaultListeners = false
            jvmArgs = ['-Dcucumber.options= ' +
                               '--glue sauce.demo ' +
                               '--plugin pretty ' +
                               '--plugin io.qameta.allure.cucumber2jvm.AllureCucumber2Jvm ' + cucumberOptions]
        }
        testLogging.showStandardStreams = true
        scanForTestClasses = false
        ignoreFailures = false
    }
    finalizedBy 'allureReport'
}
